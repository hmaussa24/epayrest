// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Usuario {
  id        Int           @id @default(autoincrement())
  documento String        @unique @db.VarChar(10) 
  nombres   String        @db.VarChar(255)        
  email     String        @unique @db.VarChar(255)
  celular   String        @db.VarChar(10)         
  
  saldo     SaldoUsuario?
  sesiones  Sesion[]
}

model SaldoUsuario {
  id           Int      @id @default(autoincrement())  
  usuarioId    Int      @unique                      
  saldo        Float    @default(0.0)                
  actualizadoEn DateTime @updatedAt                   

  usuario      Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade) 
  @@map("saldos_usuarios")
}

model Sesion {
  id          Int       @id @default(autoincrement())
  token       String    @db.VarChar(6) // Token de 6 dígitos
  sesionId    String    @unique
  usuarioId   Int       // Relación con el usuario
  createdAt   DateTime  @default(now())
  expiresAt   DateTime  // Expiración del token

  usuario     Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@index([sesionId], name: "sesion_id_idx") // Índice en el campo sesionId para mejorar las consultas
}